{"version":3,"sources":["webpack:///./src/js/utils/detector.js","webpack:///./src/js/utils/preloadScene.js","webpack:///./src/js/main/components/renderer.js","webpack:///./src/js/main/components/camera.js","webpack:///./src/js/main/components/controls.js","webpack:///./src/js/main/Main.js","webpack:///./src/js/app.js"],"names":["Detector","canvas","document","createElement","window","WebGLRenderingContext","getContext","e","element","id","style","fontFamily","fontSize","fontWeight","textAlign","background","color","padding","width","margin","innerHTML","join","parameters","parent","undefined","body","this","getWebGLErrorMessage","appendChild","PreloadScene","_loading","getElementById","_saveStyle","_old_style","display","Renderer","config","scene","container","threeRenderer","THREE","antialias","setClearColor","fog","setPixelRatio","devicePixelRatio","domElement","shadowMap","enabled","type","maxAnisotropy","capabilities","getMaxAnisotropy","updateSize","outputEncoding","xr","VRButton","createButton","addEventListener","setSize","offsetWidth","offsetHeight","camera","render","Camera","renderer","height","threeCamera","fov","near","far","position","set","posX","posY","posZ","lookAt","aspect","updateProjectionMatrix","Controls","threeControls","OrbitControls","init","target","controls","x","y","z","autoRotate","autoRotateSpeed","rotateSpeed","zoomSpeed","minDistance","maxDistance","minPolarAngle","maxPolarAngle","enableDamping","enableZoom","dampingFactor","Main","_container","_config","Object","assign","Math","PI","minAzimuthAngle","Infinity","maxAzimuthAngle","url","size","translate","animated","translate1","animatedCycle","animation","time","speed","isDev","console","log","_scene","createScene","_renderer","_camera","_controls","light","add","sceneElement","loadScene","dpr","update","dt","Date","now","_lastframe","_animatedCycle","currentPhase","_animatedCyclePos","phaseDuration","_getDuration","delta_time","curr_msecs","distance","_action_figure","translateZ","_lastAnimationPhase","_getAnimation","fadeOut","length","reset","setEffectiveTimeScale","setEffectiveWeight","fadeIn","play","_mixer","requestAnimationFrame","bind","scene_url","toLowerCase","endsWith","_loadGLTF","_loadFBX","_loadVRM","_loadBVH","main_instance","BVHLoader","load","result","skeletonHelper","skeleton","bones","boneContainer","_resizeObject","mixer","clipAction","clip","_setMixer","GLTFLoader","gltf","VRM","from","then","vrm","meta","progress","loaded","total","error","config_translate","object","translateX","translateY","config_size","setFromObject","getSize","max","scale","loader","FBXLoader","visible","animations","traverse","child","isMesh","castShadow","receiveShadow","processor","_processScene","_searchAnimations","gltf_scene","pointingAction","gestureAction","startWalkAction","endWalkAction","walkAction","idleAction","durations","duration","_fixObject","model","searchAnimations","children","forEach","clips","mroot","bbox","cent","getCenter","maxAxis","multiplyScalar","copy","_getAnimationName","detector","preloadScene","webgl","main","start","hideLoading","run","addGetWebGLMessage"],"mappings":"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","file":"0.app.js","sourcesContent":["export default class Detector {\r\n    webgl() {\r\n        try {\r\n            var canvas = document.createElement('canvas');\r\n\r\n            return !!(window.WebGLRenderingContext && (canvas.getContext('webgl') || canvas.getContext('experimental-webgl')));\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    getWebGLErrorMessage() {\r\n        var element = document.createElement('div');\r\n        element.id = 'webgl-error-message';\r\n        element.style.fontFamily = 'monospace';\r\n        element.style.fontSize = '13px';\r\n        element.style.fontWeight = 'normal';\r\n        element.style.textAlign = 'center';\r\n        element.style.background = '#fff';\r\n        element.style.color = '#000';\r\n        element.style.padding = '1.5em';\r\n        element.style.width = '400px';\r\n        element.style.margin = '5em auto 0';\r\n\r\n        element.innerHTML = window.WebGLRenderingContext ? [\r\n            'Your graphics card does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000000\">WebGL</a>.<br />',\r\n            'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000000\">here</a>.'\r\n        ].join('\\n') : [\r\n            'Your browser does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000000\">WebGL</a>.<br/>',\r\n            'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000000\">here</a>.'\r\n        ].join('\\n');\r\n\r\n        return element;\r\n    };\r\n\r\n    addGetWebGLMessage(parameters) {\r\n        var parent, id, element;\r\n\r\n        parameters = parameters || {};\r\n\r\n        parent = parameters.parent !== undefined ? parameters.parent : document.body;\r\n        id = parameters.id !== undefined ? parameters.id : 'oldie';\r\n\r\n        element = this.getWebGLErrorMessage();\r\n        element.id = id;\r\n\r\n        parent.appendChild(element);\r\n    };\r\n}\r\n","export default class PreloadScene {\r\n    constructor(document) {\r\n        this._loading = document.getElementById('loading');\r\n        this._saveStyle();\r\n    }\r\n\r\n    _saveStyle() {\r\n        this._old_style = this._loading.style.display;\r\n    }\r\n\r\n    hideLoading() {\r\n        this._saveStyle();\r\n        this._loading.style.display = \"none\";\r\n    }\r\n\r\n    showLoading() {\r\n        this._loading.style.display = this._old_style;\r\n    }\r\n\r\n}\r\n","import * as THREE from 'three';\r\n\r\nimport { VRButton } from 'three/examples/jsm/webxr/VRButton';\r\nimport { XRControllerModelFactory  } from 'three/examples/jsm/webxr/XRControllerModelFactory';\r\n\r\n\r\n// Main webGL renderer class\r\nexport default class Renderer {\r\n  constructor(config, scene, container) {\r\n    // Properties\r\n    this.scene = scene;\r\n    this.container = container;\r\n\r\n    // Create WebGL renderer and set its antialias\r\n    this.threeRenderer = new THREE.WebGLRenderer({antialias: true});\r\n\r\n    // Set clear color to fog to enable fog or to hex color for no fog\r\n    this.threeRenderer.setClearColor(scene.fog.color);\r\n    this.threeRenderer.setPixelRatio(window.devicePixelRatio); // For retina\r\n\r\n    // Appends canvas\r\n    container.appendChild(this.threeRenderer.domElement);\r\n\r\n    // Shadow map options\r\n    this.threeRenderer.shadowMap.enabled = true;\r\n    this.threeRenderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n\r\n    // Get anisotropy for textures\r\n    config.maxAnisotropy = this.threeRenderer.capabilities.getMaxAnisotropy();\r\n\r\n    // Initial size update set to canvas container\r\n    this.updateSize();\r\n\r\n    this.threeRenderer.outputEncoding = THREE.sRGBEncoding;\r\n    this.threeRenderer.xr.enabled = true;\r\n\r\n    // VR Button\r\n    document.body.appendChild( VRButton.createButton( this.threeRenderer ) );\r\n\r\n    // Listeners\r\n    document.addEventListener('DOMContentLoaded', () => this.updateSize(), false);\r\n    window.addEventListener('resize', () => this.updateSize(), false);\r\n  }\r\n\r\n  updateSize() {\r\n    this.threeRenderer.setSize(this.container.offsetWidth, this.container.offsetHeight);\r\n  }\r\n\r\n  render(scene, camera) {\r\n    // Renders scene to canvas target\r\n    this.threeRenderer.render(scene, camera);\r\n  }\r\n}\r\n","import * as THREE from 'three';\r\n\r\n// Class that creates and updates the main camera\r\nexport default class Camera {\r\n    constructor(config, renderer) {\r\n        const width = renderer.domElement.width;\r\n        const height = renderer.domElement.height;\r\n\r\n        // Create and position a Perspective Camera\r\n        this.threeCamera = new THREE.PerspectiveCamera(\r\n            config.camera.fov,\r\n            width / height,\r\n            config.camera.near,\r\n            config.camera.far\r\n        );\r\n\r\n        this.threeCamera.position.set(\r\n            config.camera.posX,\r\n            config.camera.posY,\r\n            config.camera.posZ\r\n        );\r\n\r\n        this.threeCamera.lookAt(0,0,0);\r\n\r\n        // Initial sizing\r\n        this.updateSize(renderer);\r\n\r\n        // Listeners\r\n        window.addEventListener('resize', () => this.updateSize(renderer), false);\r\n    }\r\n\r\n    updateSize(renderer) {\r\n        // Update camera aspect ratio with window aspect ratio\r\n        this.threeCamera.aspect = renderer.domElement.width / renderer.domElement.height;\r\n\r\n        // Always call updateProjectionMatrix on camera change\r\n        this.threeCamera.updateProjectionMatrix();\r\n    }\r\n}\r\n","import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\n\r\n// Controls based on orbit controls\r\nexport default class Controls {\r\n    constructor(config, camera, container) {\r\n        // Orbit controls first needs to pass in THREE to constructor\r\n        //const orbitControls = new OrbitControls(THREE);\r\n        this.threeControls = new OrbitControls(camera, container);\r\n\r\n        this.init(config);\r\n    }\r\n\r\n    init(config) {\r\n        this.threeControls.target.set(config.controls.target.x, config.controls.target.y, config.controls.target.z);\r\n        this.threeControls.autoRotate = config.controls.autoRotate;\r\n        this.threeControls.autoRotateSpeed = config.controls.autoRotateSpeed;\r\n        this.threeControls.rotateSpeed = config.controls.rotateSpeed;\r\n        this.threeControls.zoomSpeed = config.controls.zoomSpeed;\r\n        this.threeControls.minDistance = config.controls.minDistance;\r\n        this.threeControls.maxDistance = config.controls.maxDistance;\r\n        this.threeControls.minPolarAngle = config.controls.minPolarAngle;\r\n        this.threeControls.maxPolarAngle = config.controls.maxPolarAngle;\r\n        this.threeControls.enableDamping = config.controls.enableDamping;\r\n        this.threeControls.enableZoom = config.controls.enableZoom;\r\n        this.threeControls.dampingFactor = config.controls.dampingFactor;\r\n    }\r\n}\r\n","import * as THREE from 'three';\r\n\r\nimport Renderer from \"./components/renderer\";\r\nimport Camera from \"./components/camera\";\r\nimport Controls from \"./components/controls\";\r\n\r\nimport {BoxLineGeometry} from 'three/examples/jsm/geometries/BoxLineGeometry.js';\r\nimport {GLTFLoader} from 'three/examples/jsm/loaders/GLTFLoader.js';\r\nimport {FBXLoader} from 'three/examples/jsm/loaders/FBXLoader.js';\r\nimport {BVHLoader} from 'three/examples/jsm/loaders/BVHLoader.js';\r\n\r\n\r\nimport {VRM} from '@pixiv/three-vrm';\r\n\r\nexport default class Main {\r\n\r\n    constructor(container, config = {}) {\r\n        this._container = container;\r\n        this._config = Object.assign({\r\n            fog: {\r\n                color: 0x505050,\r\n                near: 0.0008\r\n            },\r\n            camera: {\r\n                fov: 60,\r\n                near: 0.001,\r\n                far: 1000,\r\n                aspect: 1,\r\n                posX: 0,\r\n                posY: 1.8,\r\n                posZ: 3.2\r\n            },\r\n            controls: {\r\n                autoRotate: false,\r\n                autoRotateSpeed: -0.5,\r\n                rotateSpeed: 0.5,\r\n                zoomSpeed: 0.8,\r\n                minDistance: 0.01,\r\n                maxDistance: 600,\r\n                minPolarAngle: Math.PI / 5,\r\n                maxPolarAngle: Math.PI / 2,\r\n                minAzimuthAngle: -Infinity,\r\n                maxAzimuthAngle: Infinity,\r\n                enableDamping: true,\r\n                dampingFactor: 0.5,\r\n                enableZoom: true,\r\n                target: {\r\n                    x: 0,\r\n                    y: 1.8,\r\n                    z: 0\r\n                }\r\n            },\r\n            scene: [\r\n                {\r\n                    url: 'assets/interior/small_apartment_design_vr_2018/scene.gltf',\r\n                    size: {\r\n                        x: 0.01,\r\n                        y: 0.01,\r\n                        z: 0.01\r\n                    },\r\n                    translate: {\r\n                        x: 0,\r\n                        y: 0,\r\n                        z: 0,\r\n                    },\r\n                    animated: false\r\n                },\r\n                {\r\n                    //url: 'assets/vr_gallery/scene.glb',\r\n                    //url: 'assets/kamca/scene.glb',\r\n                    //url: 'assets/izzy/scene.glb',\r\n                    //url: 'assets/darion_2/00078_Darion001_0_InsanelyLow.FBX',\r\n                    //url: 'assets/BVH/aim_pistol.bvh',\r\n                    //url: 'assets/darion_2/Arm Gesture (2).fbx',\r\n                    //url: 'assets/claudia/Arm Gesture (3).fbx',\r\n                    url: 'assets/claudia/mixamo-1613450024492.glb',\r\n                    //url: 'assets/claudia/Pointing.fbx',\r\n                    //url: 'assets/darion_2/untitled.glb',\r\n                    //url: 'assets/vrm/three-vrm-girl.vrm',\r\n                    //url: 'assets/cyber_avatar/scene.gltf',\r\n                    //url: 'assets/sci-fi/scene.glb',\r\n                    //url: 'assets/female1_idle.glb',\r\n                    size: {\r\n                        x: 0.01,\r\n                        y: 0.01,\r\n                        z: 0.01\r\n                    },\r\n                    translate1: {\r\n                        x: -6,\r\n                        y: -0.55,\r\n                        z: 6.5,\r\n                    },\r\n                    translate: {\r\n                        x: 1,\r\n                        y: 0,\r\n                        z: -1.6,\r\n                    },\r\n                    animated: true,\r\n                    animatedCycle: [\r\n                        {\r\n                            animation: 'idle',\r\n                            time: 2\r\n                        },\r\n                        {\r\n                            animation: 'pointing'\r\n                        },\r\n                        {\r\n                            speed: 1.0,\r\n                            animation: 'walk'\r\n                        },\r\n                        {\r\n                            animation: 'gesture'\r\n                        }\r\n                    ]\r\n                }],\r\n            isDev: true\r\n        }, config);\r\n\r\n        if (this._config.isDev) {\r\n            console.log(this._config);\r\n        }\r\n    }\r\n\r\n    start() {\r\n\r\n        const config = this._config;\r\n\r\n        this._scene = this.createScene(config);\r\n\r\n        const scene = this._scene;\r\n\r\n        this._renderer = new Renderer(config, scene, this._container);\r\n        this._camera = new Camera(config, this._renderer.threeRenderer);\r\n\r\n        this._controls = new Controls(config, this._camera.threeCamera, this._container);\r\n\r\n        const light = new THREE.AmbientLight(0x404040, 3); // soft white light\r\n        scene.add(light);\r\n\r\n        /*\r\n        const room = new THREE.LineSegments(\r\n            new BoxLineGeometry(6, 6, 6, 10, 10, 10),\r\n            new THREE.LineBasicMaterial({color: 0x800000})\r\n        );\r\n        room.geometry.translate(0, 3, 0);\r\n        scene.add(room);\r\n    */\r\n\r\n        for (const sceneElement of config.scene) {\r\n            this.loadScene(sceneElement, scene);\r\n        }\r\n\r\n    }\r\n\r\n    run() {\r\n        this.render();\r\n    }\r\n\r\n    createScene(config) {\r\n        const scene = new THREE.Scene();\r\n\r\n        if (window.devicePixelRatio) {\r\n            config.dpr = window.devicePixelRatio;\r\n        }\r\n\r\n        scene.fog = new THREE.FogExp2(config.fog.color, config.fog.near);\r\n\r\n        return scene;\r\n    }\r\n\r\n    render() {\r\n\r\n        // Call render function and pass in created scene and camera\r\n        this._renderer.render(this._scene, this._camera.threeCamera);\r\n\r\n        this._controls.threeControls.update();\r\n\r\n        const dt = (Date.now() - this._lastframe) / 1000;\r\n\r\n        if (this._animatedCycle !== undefined) {\r\n\r\n            const currentPhase = this._animatedCycle[this._animatedCyclePos];\r\n\r\n            let phaseDuration = currentPhase.time;\r\n\r\n            if(phaseDuration == undefined) {\r\n                phaseDuration = this._getDuration();\r\n            }\r\n\r\n            const delta_time = phaseDuration * 1000;\r\n\r\n            const curr_msecs = Date.now();\r\n\r\n            if (currentPhase.speed !== undefined) {\r\n                const distance = dt * currentPhase.speed;\r\n                this._action_figure.translateZ(distance);\r\n            }\r\n\r\n            if (curr_msecs - this._lastAnimationPhase > delta_time) {\r\n\r\n                const fade_duration = 0.4;\r\n\r\n                //this._getAnimation().stop();\r\n                this._getAnimation().fadeOut( fade_duration );\r\n\r\n\r\n                this._animatedCyclePos = this._animatedCyclePos + 1;\r\n\r\n                if (this._animatedCyclePos > this._animatedCycle.length - 1) {\r\n                    this._animatedCyclePos = 0;\r\n                }\r\n\r\n                this._lastAnimationPhase = curr_msecs;\r\n                this._getAnimation()\r\n                    .reset()\r\n                    .setEffectiveTimeScale( 1 )\r\n                    .setEffectiveWeight( 1 )\r\n                    .fadeIn( fade_duration )\r\n                    .play();\r\n                console.log(this._animatedCyclePos);\r\n            }\r\n\r\n        }\r\n\r\n        if (this._mixer !== undefined) {\r\n            this._mixer.update(dt);\r\n        }\r\n\r\n        this._lastframe = Date.now();\r\n\r\n        // RAF\r\n        requestAnimationFrame(this.render.bind(this)); // Bind the main class instead of window object\r\n    }\r\n\r\n    loadScene(config, scene) {\r\n        const scene_url = config.url.toLowerCase();\r\n\r\n        if (scene_url.endsWith('gltf') || scene_url.endsWith('glb')) {\r\n            this._loadGLTF(config, scene);\r\n        } else if (scene_url.endsWith('fbx')) {\r\n            this._loadFBX(config, scene);\r\n        } else if (scene_url.endsWith('vrm')) {\r\n            this._loadVRM(config, scene);\r\n        } else if (scene_url.endsWith('bvh')) {\r\n            this._loadBVH(config, scene);\r\n        } else {\r\n            console.log('Unknown format! ' + scene_url);\r\n        }\r\n    }\r\n\r\n    _loadBVH(config, scene) {\r\n\r\n        const main_instance = this;\r\n\r\n\r\n        const loader = new BVHLoader();\r\n        loader.load(config.scene.url, function (result) {\r\n\r\n            console.log(result);\r\n\r\n            const skeletonHelper = new THREE.SkeletonHelper(result.skeleton.bones[0]);\r\n            skeletonHelper.skeleton = result.skeleton; // allow animation mixer to bind to THREE.SkeletonHelper directly\r\n\r\n            const boneContainer = new THREE.Group();\r\n            boneContainer.add(result.skeleton.bones[0]);\r\n\r\n            scene.add(main_instance._resizeObject(config.scene.size, skeletonHelper));\r\n            scene.add(main_instance._resizeObject(config.scene.size, boneContainer));\r\n\r\n            // play animation\r\n            const mixer = new THREE.AnimationMixer(skeletonHelper);\r\n            mixer.clipAction(result.clip).setEffectiveWeight(1.0).play();\r\n\r\n            main_instance._setMixer(mixer);\r\n\r\n        });\r\n    }\r\n\r\n    _loadVRM(config, scene) {\r\n\r\n        const loader = new GLTFLoader();\r\n        loader.load(\r\n            // URL of the VRM you want to load\r\n            config.scene.url,\r\n\r\n            // called when the resource is loaded\r\n            (gltf) => {\r\n\r\n                // generate a VRM instance from gltf\r\n                VRM.from(gltf).then((vrm) => {\r\n\r\n                    console.log(vrm.meta);\r\n\r\n                    // add the loaded vrm to the scene\r\n                    scene.add(vrm.scene);\r\n\r\n                    // deal with vrm features\r\n                    console.log(vrm);\r\n\r\n                });\r\n\r\n            },\r\n\r\n            // called while loading is progressing\r\n            (progress) => console.log('Loading model...', 100.0 * (progress.loaded / progress.total), '%'),\r\n\r\n            // called when loading has errors\r\n            (error) => console.error(error)\r\n        );\r\n\r\n    }\r\n\r\n    _fixObject(config_translate, object) {\r\n        object.translateX(config_translate.x);\r\n        object.translateY(config_translate.y);\r\n        object.translateZ(config_translate.z);\r\n        return object;\r\n    }\r\n\r\n    _resizeObject(config_size, object) {\r\n\r\n        const bbox = new THREE.Box3().setFromObject(object);\r\n        const size = bbox.getSize(new THREE.Vector3());\r\n\r\n        //Rescale the object to normalized space\r\n        const maxAxis = Math.max(size.x, size.y, size.z);\r\n        const maxSize = Math.max(config_size.x, config_size.y, config_size.z);\r\n\r\n        object.scale.set(config_size.x, config_size.y, config_size.z);\r\n\r\n        return object;\r\n\r\n    }\r\n\r\n    _loadFBX(config, scene) {\r\n        const loader = new FBXLoader();\r\n\r\n        const main_instance = this;\r\n\r\n        loader.load(config.scene.url, function (object) {\r\n\r\n\r\n            const skeleton = new THREE.SkeletonHelper(object);\r\n            skeleton.visible = true;\r\n            scene.add(skeleton);\r\n\r\n            const mixer = new THREE.AnimationMixer(object);\r\n\r\n            console.log(object.animations);\r\n\r\n            const action = mixer.clipAction(object.animations[0]);\r\n            action.play();\r\n\r\n            object.traverse(function (child) {\r\n\r\n                if (child.isMesh) {\r\n\r\n                    child.castShadow = true;\r\n                    child.receiveShadow = true;\r\n\r\n                }\r\n\r\n            });\r\n\r\n            scene.add(\r\n                main_instance._resizeObject(\r\n                    config.scene.size,\r\n                    object\r\n                )\r\n            );\r\n\r\n            main_instance._setMixer(mixer);\r\n\r\n\r\n        });\r\n    }\r\n\r\n    _loadGLTF(config, scene) {\r\n        const loader = new GLTFLoader();\r\n        const processor = this._processScene;\r\n        const searchAnimations = this._searchAnimations;\r\n        const main_instance = this;\r\n\r\n        loader.load(config.url, function (gltf) {\r\n\r\n            const gltf_scene = processor(gltf.scene);\r\n\r\n            if (config.animated) {\r\n                const skeleton = new THREE.SkeletonHelper(gltf_scene);\r\n                skeleton.visible = false;\r\n                scene.add(skeleton);\r\n\r\n                //console.log(skeleton);\r\n\r\n                const mixer = new THREE.AnimationMixer(gltf.scene);\r\n\r\n                main_instance._mixer = mixer;\r\n\r\n                main_instance.bones = [];\r\n\r\n                const animations = gltf.animations;\r\n\r\n                console.log(animations);\r\n\r\n                const pointingAction = mixer.clipAction(animations[6]);\r\n                const gestureAction = mixer.clipAction(animations[0]);\r\n                const startWalkAction = mixer.clipAction(animations[8]);\r\n                const endWalkAction = mixer.clipAction(animations[4]);\r\n                const walkAction = mixer.clipAction(animations[10]);\r\n                const idleAction = mixer.clipAction(animations[12]);\r\n\r\n                main_instance.durations = [];\r\n                main_instance.durations['pointing'] = animations[6].duration;\r\n                main_instance.durations['gesture'] = animations[0].duration;\r\n                main_instance.durations['walk'] = animations[10].duration;\r\n                main_instance.durations['startWalk'] = animations[8].duration;\r\n                main_instance.durations['endWalk'] = animations[4].duration;\r\n                main_instance.durations['idle'] = animations[12].duration;\r\n\r\n                main_instance.animations = [];\r\n                main_instance.animations['pointing'] = pointingAction;\r\n                main_instance.animations['gesture'] = gestureAction;\r\n                main_instance.animations['startWalk'] = startWalkAction;\r\n                main_instance.animations['endWalk'] = endWalkAction;\r\n                main_instance.animations['walk'] = walkAction;\r\n                main_instance.animations['idle'] = idleAction;\r\n\r\n                //idleAction.setLoop(THREE.LoopPingPong);\r\n\r\n                //pointingAction.play();\r\n\r\n                const animatedCycle = config.animatedCycle;\r\n\r\n                if (animatedCycle !== undefined) {\r\n                    main_instance._lastAnimationPhase = Date.now();\r\n                    main_instance._animatedCycle = animatedCycle;\r\n                    main_instance._animatedCyclePos = 0;\r\n\r\n                    main_instance.animations[\r\n                        animatedCycle[\r\n                            main_instance._animatedCyclePos\r\n                            ].animation\r\n                        ].play();\r\n\r\n                }\r\n\r\n            }\r\n\r\n            main_instance._action_figure = main_instance._fixObject(\r\n                config.translate,\r\n                main_instance._resizeObject(\r\n                    config.size,\r\n                    gltf_scene\r\n                )\r\n            )\r\n\r\n\r\n            scene.add(\r\n                main_instance._action_figure\r\n            );\r\n\r\n\r\n        }, undefined, function (error) {\r\n\r\n            console.error(error);\r\n\r\n        });\r\n    }\r\n\r\n    _searchAnimations(model, searchAnimations = this._searchAnimations) {\r\n        if (model === undefined) {\r\n            return;\r\n        }\r\n\r\n        if (model.children === undefined) {\r\n            return;\r\n        }\r\n\r\n        model.children.forEach(element => {\r\n            var clips = element.animations;\r\n            if (clips !== undefined) {\r\n                console.log(clips);\r\n            }\r\n\r\n            searchAnimations(element, searchAnimations);\r\n        });\r\n\r\n    }\r\n\r\n    _processScene(scene) {\r\n        let mroot = scene;\r\n        let bbox = new THREE.Box3().setFromObject(mroot);\r\n        let cent = bbox.getCenter(new THREE.Vector3());\r\n        let size = bbox.getSize(new THREE.Vector3());\r\n\r\n        //Rescale the object to normalized space\r\n        var maxAxis = Math.max(size.x, size.y, size.z);\r\n\r\n        mroot.scale.multiplyScalar(1.8 / maxAxis);\r\n        bbox.setFromObject(mroot);\r\n        bbox.getCenter(cent);\r\n        bbox.getSize(size);\r\n        //Reposition to 0,halfY,0\r\n        mroot.position.copy(cent).multiplyScalar(-1);\r\n        mroot.position.y += (size.y * 0.5);\r\n        return scene;\r\n    }\r\n\r\n    _setMixer(mixer) {\r\n        this._mixer = mixer;\r\n    }\r\n\r\n    _getAnimation() {\r\n        return this.animations[\r\n            this._getAnimationName()\r\n            ]\r\n    }\r\n\r\n    _getDuration() {\r\n        return this.durations[\r\n            this._getAnimationName()\r\n            ]\r\n    }\r\n\r\n    _getAnimationName() {\r\n        return this._animatedCycle[\r\n            this._animatedCyclePos\r\n            ].animation\r\n    }\r\n}\r\n","import Detector from \"./utils/detector.js\";\r\nimport PreloadScene from './utils/preloadScene.js';\r\nimport Main from './main/Main.js'\r\n\r\n\r\n// Styles\r\nimport './../css/app.scss';\r\n\r\nconsole.log('Start sequor.edu');\r\n\r\nconst detector = new Detector();\r\n\r\nconst preloadScene = new PreloadScene(document);\r\n\r\nif (detector.webgl()) {\r\n\r\n    const container = document.getElementById('appContainer');\r\n\r\n    const main = new Main(container);\r\n\r\n    main.start();\r\n\r\n    preloadScene.hideLoading();\r\n\r\n    main.run();\r\n\r\n} else {\r\n\r\n    preloadScene.hideLoading();\r\n\r\n    detector.addGetWebGLMessage(\r\n        {\r\n            parent: document.getElementById('appContainer'),\r\n            id: 'webgl-error'\r\n        }\r\n    );\r\n\r\n}\r\n"],"sourceRoot":""}